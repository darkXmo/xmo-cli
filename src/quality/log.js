import { default as lg } from '../utils/console.js';

/**
 * @param { "Typescript" | "Javascript" } language
 */
const checkWarnConflict = (language = 'Javascript') => {
  console.log(
    lg.printWaring(
      '   [Warning]: xmo init -q ÈÄÇÁî®‰∫éÂàùÂßãÂåñË¥®ÈáèÁÆ°ÁêÜÔºåÂ¶ÇÊûúÈ°πÁõÆ‰∏≠Â∑≤ÊúâË¥®ÈáèÁÆ°ÁêÜÈÖçÁΩÆ  '
    )
  );
  console.log(
    lg.printWaring(
      language === 'Javascript'
        ? '   [Warning]: ESLintÔºåPrettierÔºåhuskyÔºåcommitlint                           '
        : '   [Warning]: PrettierÔºåhuskyÔºåcommitlint                                   '
    )
  );
  console.log(
    lg.printWaring(
      '   [Warning]: ÂàôÊúâÂèØËÉΩÂºïËµ∑ÂÜ≤Á™Å„ÄÇ                                            '
    )
  );
  console.log(
    lg.printWaring(
      '   [Warning]: Âª∫ËÆÆ xmo init -q -f Âº∫Âà∂ÈáçÊñ∞ÂàùÂßãÂåñË¥®ÈáèÁÆ°ÁêÜÈÖçÁΩÆ                '
    )
  );
};

const checkCommitlintRecommend = () => {
  console.log(
    `‰Ω†Â∫îÂΩìÁî® ${lg.printCommand('yarn commit')} ‰ª£Êõø ${lg.printCommand(
      'git add Âíå git commit'
    )} ÂëΩ‰ª§ËøõË°å git Êèê‰∫§`
  );
};

const checkGitInit = () => {
  console.log(lg.printError(' ËØ∑ÂÖàÂØπÈ°πÁõÆgitÂàùÂßãÂåñ„ÄÇ'));
};

/**
 * @param { ...("prettier" | "eslint") } type ÊòØÂê¶Êúâeslint
 */
const checkRecommendWords = (...type) => {
  const strArr = [];
  if (type.includes('prettier')) {
    strArr.push('yarn prettier --write .');
  }
  if (type.includes('eslint')) {
    strArr.push('yarn lint:eslint');
  }
  console.log(' Êé®Ëçê‰ΩøÁî®‰ª•‰∏ãÊåá‰ª§ÂÖàÂØπÂ∑≤ÊúâÊñá‰ª∂ËøõË°åÊ†ºÂºèÂåñ');
  strArr.forEach((ele) => {
    console.log(`üöÄ  ${lg.printCommand(ele)}`);
  });
};

const checkNodeModules = () => {
  console.log(
    lg.printTip(
      'üì¶ Áî±‰∫éÈ°πÁõÆÊ≤°ÊúâÂÆâË£ÖÊú¨Âú∞‰æùËµñÔºåÂõ†Ê≠§‰ºöÊ∂àËÄó‰∏ÄÂÆöÊó∂Èó¥ÂÆâË£ÖÊâÄÊúâÊú¨Âú∞‰æùËµñ„ÄÇ'
    )
  );
  console.log(lg.printTip('Â¶ÇÊûúÈÅáÂà∞Âç°È°øÔºåËØ¥ÊòéyarnÈÅáÂà∞ÁΩëÁªúÈóÆÈ¢ò'));
};

/** @param { "Typescript" | "Javascript" } language */
const checkLanguage = (language) => {
  console.log('   ' + lg.printTip(language + 'È°πÁõÆ'));
};

const checkHuskyInit = () => {
  lg.createInit('huskyÈÖçÁΩÆ');
  lg.createDir('.husky');
  lg.createConfig('.husky/pre-commit lint-staged');
};

export default {
  warnConflict: checkWarnConflict,
  commitlintRecommend: checkCommitlintRecommend,
  gitInit: checkGitInit,
  recommendWords: checkRecommendWords,
  nodeModules: checkNodeModules,
  huskyInit: checkHuskyInit,
  language: checkLanguage,
  ...lg,
};
